import { PathGenerator, RoomPath } from "../interfaces/PathGenerator";
import { RoomFactory } from "../../factories/RoomFactory";
import { WallObjectFactory } from "../../factories/WallObjectFactory";
import { Edge } from "../../util/Graph";
import { Point } from "../../util/Point";
import { RoomType } from "../../enums/RoomType";
import { DoorType } from "../../enums/DoorType";
import { Door } from "../../interfaces/Door";

// This can work for both Large and Small blob paths
export class BlobPathGenerator implements PathGenerator {

    // Maximum length of any straight portion of the hallways generated by this
    maxStraightLength: number;
    roomFactory: RoomFactory;
    wallObjectFactory: WallObjectFactory;

    constructor(maxStraightLength: number, roomFactory: RoomFactory, wallObjectFactory: WallObjectFactory) {
        this.maxStraightLength = maxStraightLength;
        this.roomFactory = roomFactory;
        this.wallObjectFactory = wallObjectFactory;
    }

    roomWalk(edge: Edge) : RoomPath {
        return new RoomPath([], []);
    }
}
